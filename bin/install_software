#!/bin/bash
PG_VERSION=$(psql -V | awk '{print $3}' | sed 's/\.\(.*\)//')
HOST_IP=$(echo $SSH_CLIENT | awk '{ print $1}')
PHP_VERSION=$(php --version | head -1 | awk '{print $2}' | cut -d. -f 1-2)
VB_IP=$(hostname -I|awk '{print $1}')
PROJECT_FOLDER=/var/www/fusionpbx-api
LARAVEL_FOLDER=/var/www/laravel-api

function show_usage(){
    printf "Usage: $0 [options]\n";
    printf "\n";
    printf "Options:\n";
    printf " -f|--no-fusionpbx, Do not install FusionPBX\n";
    printf " -d|--no-xdebug, Do not install xdebug\n";
    printf " -p|--no-postgres-remote, Do not allow postgres remote connection\n";
    printf " -m|--no-mailhog, Do not allow mailhog for development purposes\n";
    printf "\n Example: "$(basename "$0")" -f -d -p\n";
    printf " Would install only minimal software set\n";
}

INSTALL_FUSIONPBX=true
INSTALL_XDEBUG=true
OPEN_POSTGRES=true
INSTALL_MAILHOG=true

while [ ! -z "$1" ];do
   case "$1" in
        -h|--help)
          show_usage
          ;;
        -f|--no-fusionpbx)
          # shift
          INSTALL_FUSIONPBX=false
          echo "Omitting FusionPBX install"
          ;;
        -d|--no-xdebug)
          # shift
          INSTALL_XDEBUG=false
          echo "Omitting xdebug install"
          ;;
        -m|--no-mailhog)
          # shift
          INSTALL_MAILHOG=false
          echo "Omitting mailhog install"
          ;;
        -p|--no-postgres-remote)
          # shift
          OPEN_POSTGRES=false
          echo "Leaving postgres closed for the world"
          ;;
        *)
       echo "Incorrect input provided"
       show_usage
   esac
shift
done

echo "Installing additional libraries"

apt install -y wget curl php-zmq nodejs php-mbstring \
&& apt-get install -y nano mc \
&& apt install -y supervisor;
curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer;

if [ $INSTALL_FUSIONPBX = true ] ; then
    echo "Install FusionPBX"
    wget -O - https://raw.githubusercontent.com/fusionpbx/fusionpbx-install.sh/master/debian/pre-install.sh | sh;
    cd /usr/src/fusionpbx-install.sh/debian && ./install.sh
    echo 'Well done! Dont forget to copy the password and link above!'
    read -p "Press enter to continue"
fi

echo "Let's prepare NGINX and system for our API"
cp $PROJECT_FOLDER/bin/configs/api /etc/nginx/sites-available/api
ln -s /etc/nginx/sites-available/api /etc/nginx/sites-enabled/api

if [ $OPEN_POSTGRES = true ] ; then
    # Open Postgres for remote connection
    sed -i "s/#listen_addresses = 'localhost'/listen_addresses = '*'/" /etc/postgresql/${PG_VERSION}/main/postgresql.conf
    printf "\nhost    all             all              "${HOST_IP}"/0        md5" >> /etc/postgresql/${PG_VERSION}/main/pg_hba.conf
    sudo iptables -A INPUT -p tcp --dport 5432 --jump ACCEPT
fi

if [ $INSTALL_MAILHOG = true ] ; then
  sudo apt-get -y install golang-go
  go get github.com/mailhog/MailHog
  sudo iptables -A INPUT -p tcp --dport 8025 --jump ACCEPT
  printf "[Unit]
Description=MailHog service

[Service]
ExecStart=/root/go/bin/MailHog \
  -api-bind-addr 0.0.0.0:8025 \
  -ui-bind-addr 0.0.0.0:8025 \
  -smtp-bind-addr 0.0.0.0:1025

[Install]
WantedBy=multi-user.target" >  /etc/systemd/system/mailhog.service
  sudo systemctl enable mailhog
fi

sudo iptables -A INPUT -p tcp --dport 444 --jump ACCEPT
sudo /sbin/iptables-save > /etc/iptables/rules.v4

if [ $INSTALL_XDEBUG = true ] ; then
    apt install -y php-xdebug
    cp $PROJECT_FOLDER/bin/configs/xdebug.ini /etc/php/${PHP_VERSION}/mods-available/xdebug.ini
    sed -i "s/xdebug\.remote_host=\"localhost\"/xdebug\.remote_host=\""${HOST_IP}"\"/" /etc/php/${PHP_VERSION}/mods-available/xdebug.ini
fi

# Prepare laravel configuration
cd $LARAVEL_FOLDER;
sudo -u www-data composer install
sudo -u www-data cp .env.example .env
sed -i "s/MOTHERSHIP_DOMAIN=.*/MOTHERSHIP_DOMAIN=\""${VB_IP}"\"/" .env
sudo -u www-data ../bin/update_env_db_credentials.php $LARAVEL_FOLDER
sudo -u www-data php artisan key:generate
sudo -u www-data php artisan migrate
sudo -u www-data php artisan passport:install >> tmp.txt;
sudo -u www-data ../bin/update_env_secret_keys.php $LARAVEL_FOLDER

echo "[optional] ## Get and upload apple VOIP push certificate";
echo "This is needed to send push notifications to wakeup Apple devices.";
echo "Get the certificate at Apple Developer Portal and place it to '${LARAVEL_FOLDER}/resources/certs/VOIP.pem'"
read -e -p "Enter you Apple VOIP cert passphase: " -i "" PHRASE
cd $LARAVEL_FOLDER;
sed -i "s/VOIP_APPLE_CERT_PASSPHRASE=/VOIP_APPLE_CERT_PASSPHRASE=${PHRASE}/g" .env

echo 'Done.';
echo 'After reboot your API should work under https://'${VB_IP}':444 . Please note https - is a must'
read -p "Press enter to rebootc or ctrl+c to exit the install script"
systemctl reboot
